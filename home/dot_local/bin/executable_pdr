#!/bin/sh

COLOR_RESET="\033[0;0m"
COLOR_BOLD="\033[1m"
COLOR_UNDER="\033[4m"
COLOR_BLINK="\033[5m"
COLOR_INVERSE="\033[7m"

COLOR_BLACK="\033[0;30m"
COLOR_RED="\033[0;31m"
COLOR_GREEN="\033[0;32m"
COLOR_BROWN="\033[0;33m"
COLOR_BLUE="\033[0;34m"
COLOR_MAGENTA="\033[0;35m"
COLOR_CYAN="\033[0;36m"
COLOR_LIGHT_GRAY="\033[0;37m"

COLOR_DARK_GRAY="\033[1;30m"
COLOR_LIGHT_RED="\033[1;31m"
COLOR_LIGHT_GREEN="\033[1;32m"
COLOR_YELLOW="\033[1;33m"
COLOR_LIGHT_BLUE="\033[1;34m"
COLOR_LIGHT_MAGENTA="\033[1;35m"
COLOR_LIGHT_CYAN="\033[1;36m"
COLOR_WHITE="\033[1;37m"

COLOR_BG_BLACK="\033[40m"
COLOR_BG_RED="\033[41m"
COLOR_BG_GREEN="\033[42m"
COLOR_BG_BROWN="\033[43m"
COLOR_BG_BLUE="\033[44m"
COLOR_BG_MAGENTA="\033[45m"
COLOR_BG_CYAN="\033[46m"
COLOR_BG_LIGHT_GRAY="\033[47m"

PORTSDIR=/usr/local/poudriere/ports/default
GIT_BIN=/usr/local/bin/git
POUDRIERE_BIN=/usr/local/bin/poudriere

# Notify message on error, but do not exit
error_notify() {
    echo "${COLOR_RED}$*${COLOR_RESET}" 1>&2
}

# Notify message on error and exit
error_exit() {
    error_notify $@
    exit 1
}

info() {
    echo "${COLOR_GREEN}$*${COLOR_RESET}"
}

warn() {
    echo "${COLOR_YELLOW}$*${COLOR_RESET}"
}

usage() {
    cat << EOF
pdr is an helper script for ports developers.

Usage:
  pdr [args] [TARGET]

Available Commands:
  -p                    Build ports that belongs to bofh@FreeBSD.org
  -i                    Build ports that are required by infrastructure
  -a                    Build all equivalent to -p -i
  -t [TARGET]           Test [TARGET] port for all available jails
  help or -h or --help  Print this message

EOF
    exit 1
}

update_tree() {
    cd ${PORTSDIR}
    ${GIT_BIN} checkout working && ${GIT_BIN} stash
    ${GIT_BIN} checkout main && ${GIT_BIN} pull --ff-only && ${GIT_BIN} rebase main working
	${GIT_BIN} stash apply
}

build_ports() {
    for i in 123i386 123 131 MAIN
    do
        ${POUDRIERE_BIN} pkgclean -j $i -p default -y -f /usr/local/etc/poudriere.d/lists/bofh.ports
		${POUDRIERE_BIN} logclean -j $i -y 30
        ${POUDRIERE_BIN} bulk -j $i -t -f /usr/local/etc/poudriere.d/lists/bofh.ports
    done
}

build_infrastructure() {
	for i in 131 MAIN
    do
        ${POUDRIERE_BIN} pkgclean -j $i -p default -z infrastructure -y -f /usr/local/etc/poudriere.d/lists/infrastructure
		${POUDRIERE_BIN} logclean -j $i -p default -z infrastructure -y 10
        ${POUDRIERE_BIN} bulk -j $i -z infrastructure -f /usr/local/etc/poudriere.d/lists/infrastructure
    done
}

test_ports() {
    for i in 123i386 123 131 MAIN
	do
        ${POUDRIERE_BIN} bulk -j $i -t $@
    done
}

main() {
    [ $# -lt 1 ] && usage

    CMD=$1
    shift

	# Handle special-case commands first.
    case "${CMD}" in
	help|-h|--help)
        usage
        ;;
	-p)
		# Build ports that belongs to bofh@FreeBSD.org
        update_tree
        build_ports
		;;
	-i)
        # Build ports that are required by infrastructure
		update_tree
        build_infrastructure
        ;;
	-a)
        # Build all
        update_tree
		build_infrastructure
		build_ports
		;;
    -t)
        # Parse the target and ensure it exists.
        if [ $# -eq 0 ]; then # No target was given, so show the command's help.
            error_exit "port name not provided."
        elif [ $# -eq 1 ]; then
            TARGET="${1}"
            shift
            # Ensure the target exists. -- cwells
            if [ ! -d "${PORTSDIR}/${TARGET%@*}" ]; then
                error_exit "[${TARGET}]: Not found."
            else
                test_ports ${TARGET}
            fi
        else
            usage
        fi
        ;;
    *) # Filter out all non-commands
        error_notify "Illegal option ${CMD}"
        usage
        ;;
    esac
}

main "$@"
