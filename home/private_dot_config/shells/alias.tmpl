###############################################################################
#################################COMMON ALIASES ###############################
###############################################################################
alias .="pwd"
alias ..="cd .."
alias ../="cd ../"
alias ...="cd ../.."
alias .../="cd ../../"
alias /-="cd -"
alias /="cd /"
alias alais="alias"
if command_exists fortune; then
    alias bofh="fortune $XDG_DATA_HOME/fortunes/bofh"
fi
alias bye="echo 'bye';exit"
alias cls="clear"
alias csl="clear"
alias cp="cp -ivRL"
alias del="rm -v -i"
alias df="df -h"
if command_exists emacs; then
    alias emacs="emacs -nw"
fi
alias g="egrep -i"
if command_exists gcc; then
alias gcc="gcc -Wall -W -Wpointer-arith -Wbad-function-cast -std=c99"
alias gcc_debug="gcc -ggdb3"
alias gcc_optimize="gcc -fforce-mem -fforce-addr -finline-functions \
    -fstrength-reduce  -floop-optimize -O3"
alias gcc_wall="gcc -Wall -Wpointer-arith -Wcast-qual -Wcast-align \
    -Wconversion -Waggregate-return -Wstrict-prototypes \
    -Wmissing-prototypes -Wmissing-declarations \
    -Wredundant-decls -Winline -Wnested-externs -std=c99 \
    -march=i686 -pipe"
fi
alias ff="find . -name $*"
alias j="jobs -l"
alias l="ls -l"
alias la="ls -aFG"
alias lf="ls -FAG"
alias ll="ls -laFhHo"
alias log_tcpdump="clear ; exec tcpdump -s 2000 -n -i eth0"
alias log_messages="clear; exec tail -f /var/log/messages --follow=name --retry"
alias ls="ls -FGH"
alias sl="ls -FGH"
alias m="$PAGER"
alias maek="make"
alias md="mkdir -v -p"
alias mess="clear ; tail -f /var/log/messages"
alias more="$PAGER"
alias msgcheck="msgfmt -o /dev/null --statistics --strict --verbose"
alias mute="mixer pcm 0:0"
alias mv="mv -vi"
alias pgr="$PAGER"
if command_exists drill; then
    alias publicip4='drill -4 -Q myip.opendns.com @resolver1.opendns.com A'
    alias publicip6='drill -6 -Q myip.opendns.com @resolver1.opendns.com AAAA'
elif command_exists dig; then
    alias publicip4='dig -4 myip.opendns.com A @resolver1.opendns.com +short'
    alias publicip6='dig -6 myip.opendns.com AAAA @resolver1.opendns.com +short'
elif command_exists curl; then
    alias publicip4="curl https://icanhazip.com"
    alias publicip6="curl https://ipv6.icanhazip.com"
fi
alias rd="rmdir -v"
alias rm="rm -v -i"
alias rmdir="rmdir -v"
alias today="date '+%Y-%m-%d'"
alias x="exit"
e() {
    if command_exists vim; then
        vim "$@"
    elif command_exists vi; then
        vi "$@"
    fi
}
rfcget() {
    if command_exists curl; then
        curl https://www.rfc-editor.org/rfc/rfc"$1".txt | $PAGER
    elif command_exists fetch; then
        fetch -o - https://www.rfc-editor.org/rfc/rfc"$1".txt | $PAGER
    fi
}
v() {
    if command_exists batcat; then
        batcat --theme Nord "$@"
    elif command_exists bat; then
        bat --theme Nord "$@"
    elif command_exists view; then
        view "$@"
    else
        cat "$@"
    fi
}

#alias vt    	'tar tvf'
#alias xt    	'tar xvf'
#alias ct    	'tar cvf'
#alias zv    	'unzip -v'
#alias zt    	'unzip -t'
###############################################################################
#################################NMAP ALIASES #################################
###############################################################################
if command_exists nmap; then
    alias nmap_open_ports="nmap --open"
    alias nmap_list_interfaces="nmap --iflist"
    alias nmap_slow="${SUDO}nmap -sS -v -T1"
    alias nmap_fin="${SUDO}nmap -sF -v"
    alias nmap_full="${SUDO}nmap -sS -T4 -PE -PP -PS80,443 -PY -g 53 -A -p1-65535 -v"
    alias nmap_check_for_firewall="${SUDO}nmap -sA -p1-65535 -v -T4"
    alias nmap_ping_through_firewall="${SUDO}nmap -PS -PA"
    alias nmap_fast="${SUDO}nmap -F -T5 --version-light --top-ports 300"
    alias nmap_detect_versions="${SUDO}nmap -sV -p1-65535 -O --osscan-guess -T4 -Pn"
    alias nmap_check_for_vulns="${SUDO}nmap --script=vuln"
    alias nmap_full_udp="${SUDO}nmap -sS -sU -T4 -A -v -PE -PS22,25,80 -PA21,23,80,443,3389"
    alias nmap_traceroute="${SUDO}nmap -sP -PE -PS22,25,80 -PA21,23,80,3389 -PU -PO --traceroute"
    alias nmap_full_with_scripts="${SUDO}nmap -sS -sU -T4 -A -v -PE -PP -PS21,22,23,25,80,113,31339 -PA80,113,443,10042 -PO --script all"
    alias nmap_web_safe_osscan="${SUDO}nmap -p 80,443 -O -v --osscan-guess --fuzzy"
    alias nmap_ping_scan="nmap -n -sP"
fi
###############################################################################
#################################VAGRANT ALIASES ##############################
###############################################################################
if command_exists vagrant; then
    alias vgi="vagrant init"
    alias vup="vagrant up"
    alias vd="vagrant destroy"
    alias vdf="vagrant destroy -f"
    alias vssh="vagrant ssh"
    alias vsshc="vagrant ssh-config"
    alias vrdp="vagrant rdp"
    alias vh="vagrant halt"
    alias vssp="vagrant suspend"
    alias vst="vagrant status"
    alias vre="vagrant resume"
    alias vgs="vagrant global-status"
    alias vpr="vagrant provision"
    alias vr="vagrant reload"
    alias vrp="vagrant reload --provision"
    alias vp="vagrant push"
    alias vsh="vagrant share"
    alias vba="vagrant box add"
    alias vbr="vagrant box remove"
    alias vbl="vagrant box list"
    alias vbo="vagrant box outdated"
    alias vbu="vagrant box update"
    alias vpli="vagrant plugin install"
    alias vpll="vagrant plugin list"
    alias vplun="vagrant plugin uninstall"
    alias vplu="vagrant plugin update"
fi
###############################################################################
#################################rsync ALIASES ################################
###############################################################################
if command_exists rsync; then
    alias rsync-copy="rsync -avz --progress -h"
    alias rsync-move="rsync -avz --progress -h --remove-source-files"
    alias rsync-update="rsync -avzu --progress -h"
    alias rsync-synchronize="rsync -avzu --delete --progress -h"

    cpv() {
        rsync -pogbr -hhh --backup-dir=/tmp/rsync -e /dev/null --progress "$@"
    }
fi
###############################################################################
#################################ANSIBLE ALIASES ##############################
###############################################################################
if command_exists ansible; then
    # Functions
    ansible-version() {
        ansible --version
    }

    ansible-role-init() {
        if ! [ -z $1 ] ; then
            echo "Ansible Role : $1 Creating...."
            ansible-galaxy init $1
            tree $1
        else
            echo "Usage : ansible-role-init <role name>"
            echo "Example : ansible-role-init role1"
        fi
    }

    # Alias
    alias a='ansible '
    alias aconf='ansible-config '
    alias acon='ansible-console '
    alias aver='ansible-version'
    alias arinit='ansible-role-init'
    alias ap='ansible-playbook '
    alias ainv='ansible-inventory '
    alias adoc='ansible-doc '
    alias al='ansible-pull '
    alias aval='ansible-vault'
    alias avc='ansible-vault create'
    alias ave='ansible-vault edit'
    alias avr='ansible-vault rekey'
    alias avenc='ansible-vault encrypt'
    alias avdec='ansible-vault decrypt'
    alias avv='ansible-vault view'
    alias aga='ansible-galaxy'
    alias agad='ansible-galaxy delete'
    alias agai='ansible-galaxy install'
    alias agaim='ansible-galaxy import'
    alias againf='ansible-galaxy info'
    alias agal='ansible-galaxy list'
    alias agalog='ansible-galaxy login'
    alias agar='ansible-galaxy remove'
    alias agas='ansible-galaxy search'
fi
###############################################################################
#################################ARCANIST ALIASES##############################
###############################################################################
if command_exists arc; then
    alias ara='arc amend'
    alias arb='arc branch'
    alias arco='arc cover'
    alias arci='arc commit'
    alias ard='arc diff'
    alias ardc='arc diff --create'
    alias ardnu='arc diff --nounit'
    alias ardnupc='arc diff --nounit --plan-changes'
    alias ardpc='arc diff --plan-changes'
    alias ardp='arc diff --preview' # creates a new diff in the phab interface
    alias are='arc export'
    alias arh='arc help'
    alias arl='arc land'
    alias arli='arc lint'
    alias arls='arc list'

    ardu() {
        arc diff --update "${1:t}"    # Both `ardu https://arcanist-url.com/<REVISION>`, and `ardu <REVISION>` work.
    }

    arpa() {
        arc patch "${1:t}"            # Both `arpa https://arcanist-url.com/<REVISION>`, and `arpa <REVISION>` work.
    }
fi
###############################################################################
#################################base64 ALIASES################################
###############################################################################
if command_exists base64; then
    encode64() {
        if [[ $# -eq 0 ]]; then
            cat | base64
        else
            printf '%s' $1 | base64
        fi
    }

    decode64() {
    if [[ $# -eq 0 ]]; then
        cat | base64 --decode
    else
        printf '%s' $1 | base64 --decode
    fi
    }
    alias e64=encode64
    alias d64=decode64
fi
###############################################################################
#################################tmux ALIASES #################################
###############################################################################
if command_exists tmux; then
    alias tmux="tmux -f $TMUX_CONFIG"
fi

###############################################################################
################################freebsd ALIASES ###############################
###############################################################################
alias cdp="cd /usr/local/poudriere/ports/default"
alias portlint="portlint -abct"
alias p="${SUDO}pkg"
alias pac="${SUDO}pkg autoremove -y && ${SUDO} pkg clean -ay"
alias pb="${SUDO}pkg bootstrap -fy"
alias pc="${SUDO}pkg remove -fay"
alias pi="${SUDO}pkg install -y"
alias pks="pkg search"
alias pu="${SUDO}pkg update"
alias pU="${SUDO}pkg upgrade"
alias puU="pu && puU"
alias pv="pkg version"
case ${SHELL##*/} in
    zsh|bash)
        alias h="history 25"
        alias reload="clear ; exec zsh"
        ;;
    sh)
        alias h="fc -l"
        alias reload="clear ; source ~/.shrc"
        ;;
esac

# vim: ft=sh:
